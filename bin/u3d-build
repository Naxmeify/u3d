#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var pkg = require('../package.json');
var u3d = require('..');

// ==== version
program.version(pkg.version);

// ==== usage
program.usage('[options] <path/to/Project>');

// ==== Option
program.option('-t, --trace', 'Show trace output');
program.option('-u, --unity <path>', 'Path to Unity3D Executable');
program.option('-a, --assets <path>', 'Path to Unity3D StandardAssets');
program.option('-p, --path <path>', 'Path/to/your/build (Default: ./BUILD)', path.join(process.cwd(), 'BUILD'));
program.option('-n, --name <name>', 'Name of your Builds (Default: MyGame)', 'MyGame');

program.option('    --linux', 'Build player universal for Linux');
program.option('    --linux32', 'Build player 32Bit for Linux');
program.option('    --linux64', 'Build player 64Bit for Linux');
program.option('    --osx', 'Build player universal for OSX');
program.option('    --osx32', 'Build player 32Bit for OSX');
program.option('    --osx64', 'Build player 64Bit for OSX');
program.option('    --win32', 'Build player 32Bit for Windows');
program.option('    --win64', 'Build player 64Bit for Windows');
program.option('    --web', 'Build WebPlayer');
program.option('    --stream', 'Build streamed WebPlayer');

program.on('--help', function(){
  console.log('  Examples:');
  console.log('');
  console.log('    $ u3d build -w 64 AngryBots');
  console.log('    $ u3d build -w 32,64 AngryBots');
  console.log('    $ u3d build --linux 64 AngryBots');
  console.log('    $ u3d build --linux universal,32,64 AngryBots');
  console.log('    $ u3d build --linux universal,32,64 --windows 32,64 AngryBots');
  console.log('');
});


// ==== parse
program.parse(process.argv);

// ==== Print Help if no command is executed
if (!process.argv.slice(2).length) {
    program.outputHelp();
} else {
  // ==== destination
  var relativePath = program.args.shift();

  if(relativePath === null || relativePath === undefined) {
    program.outputHelp();
    process.exit(1);
  }

  var destinationPath = "";
  if(relativePath) {
    destinationPath = path.join(process.cwd(), relativePath);
  } else {
    destinationPath = process.cwd();
  }

  // ==== THE ACTION
  // console.log("Linux: %j", program.linux);
  // console.log("Linux 32: %j", program.linux32);
  // console.log("Linux 64: %j", program.linux64);
  // console.log("Windows 32: %j", program.win32);
  // console.log("Windows 64: %j", program.win64);
  // console.log("OSX: %j", program.osx);
  // console.log("OSX32: %j", program.osx32);
  // console.log("OSX64: %j", program.osx64);
  // console.log("Web: %j", program.web);
  // console.log("Stream: %j", program.stream);
  //
  // console.log("Path: %j", destinationPath);

  u3d.u3d.build(program, destinationPath);
}
